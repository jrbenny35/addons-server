version: 2
jobs:
  build:
    machine: true
    working_directory: ~/addons-server
    steps:
      - checkout
      - run: >
          printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n'
          "$CIRCLE_SHA1"
          "$CIRCLE_TAG"
          "$CIRCLE_PROJECT_USERNAME"
          "$CIRCLE_PROJECT_REPONAME"
          "$CIRCLE_BUILD_URL"
          > version.json
      - run: echo "Docker deploy here."
  integration_test:
    machine: True
    working_directory: ~/addons-server
    steps:
      - run: apt-get update && apt-get install curl
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
      - setup_remote_docker
      - run:
          name: Install git
          command: apt-get install git
      - checkout
      - run: git clone https://github.com/mozilla/addons-frontend.git
      - run:
          name: Creating Artifacts
          command: mkdir /tmp/artifacts
      - run:
          command: |
              curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
              echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
      - run: sudo apt-get update && sudo apt-get install yarn
      - run: ./tests/ui/circleci/install-test-depenencies.sh
      - run:
          name: Start Containers
          command: |
            set -x
            docker-compose up -d
      - run:
          name: Run tests
          command: |
            echo 127.0.0.1 olympia.dev | sudo tee -a /etc/hosts
            export DISPLAY=:99
            pip install tox
            tox -e ui-tests-1 -- --html=/tmp/artifacts/ui-test-1.html
      - store_artifacts:
          path: /tmp/artifacts/ui-test.html
          destination: ui-test.html
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - integration_test
